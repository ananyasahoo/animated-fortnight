
import java.util.*;

class Employee {
  String name;
  double salary;
  Integer id;
  String designation;
 String InsuranceScheme;
 
 Employee(){
     
 }

  public String getName() {
	return name;
}

public void setName(String name) {
	this.name = name;
}

public double getSalary() {
	return salary;
}

public void setSalary(double salary) {
	this.salary = salary;
}

public Integer getId() {
	return id;
}

public void setId(Integer id) {
	this.id = id;
}

public String getDesignation() {
	return designation;
}

public void setDesignation(String designation) {
	this.designation = designation;
}

public String getInsuranceScheme() {
	return InsuranceScheme;
}

public void setInsuranceScheme(String insuranceScheme) {
	InsuranceScheme = insuranceScheme;
}

public Employee(String name, double salary, Integer id, String designation) {
    //parameterized constructor
    this.name=name;
    this.salary=salary;
    this.id=id;
    this.designation=designation;
    this.InsuranceScheme=getInsuranceScheme(this.salary);
  }

  public String getInsuranceScheme(double salary) {
    /*  write your code here to return the scheme on the basis of salary
     if nothing falls in the range return null */
     String s1=null;
     if(salary>5000 && salary <20000){
         s1="scheme c";
     }
     
     if(salary>=20000 && salary <40000){
         s1="scheme b";
     }
     if(salary>=40000){
         s1="scheme a";
     }
     if(salary <5000){
         s1="no scheme";
     }
     
     setInsuranceScheme(s1);
     
     return s1;
  }
}


class EmployeeServiceImpl {
  //Declare a Hashmap here where key is an Integer and the value is Employee object
  public static HashMap<Integer,Employee> h=new HashMap<Integer,Employee>();
  public static int c=0;

  public static void addEmployee(Employee emp) {
    //write your code here to add employee to the hashmap
    h.put(emp.id,emp);
    //System.out.println("added successfully");

  }

  public static boolean deleteEmployee(int id){
    
    //write your code here for returning true if the employee deleted wrt the id passed else false
    boolean b=false;
    if(h.containsKey(id)){
        h.remove(id);
        b=true;
    }
   // System.out.println("deleted successfully");
    return b;
  }

  public static String showEmpDetails(String InsuranceScheme) {
    /*Write your code here to return a string i.e the employee details according to the insurance scheme
    Format: Name: name Id: id Salary: salary Designation: Designation InsuranceScheme: InsuranceScheme
    If multiple results they should be in a different line*/
    boolean flag = true;
	  String str = "";
	  for (Map.Entry mapElement : h.entrySet()) { 
          Employee obj = ((Employee)mapElement.getValue()); 
          if(InsuranceScheme.equals(obj.getInsuranceScheme(obj.salary))){
        	  flag = false;
        	  str+= "Name: "+obj.name+" Id: "+obj.id+" Salary: "+obj.salary+" Designation: "+obj.designation+" InsuranceScheme: "+InsuranceScheme;
      } 
  }
	  if(flag) {
		  return null;
	  }
	  return str;
  }
}

class Source{
    public static void main(String []ags){
        Scanner sc=new Scanner(System.in);
        Source s2=new Source();
        String nam,dg;
        double sal;
        int d1;
        
        int z=sc.nextInt(); sc.nextLine();
        
        nam=sc.nextLine();
        sal=sc.nextDouble();
        d1=sc.nextInt(); sc.nextLine();
        dg=sc.nextLine();
        
        if(z==1){
        
        Employee s1=new Employee(nam,sal,d1,dg);
        EmployeeServiceImpl e=new EmployeeServiceImpl();
        
        e.addEmployee(s1);
        }
        
        if(z==2){
           // Employee e3=new Employee(nam,sal,d1,dg);
            String s4=sc.nextLine();
            EmployeeServiceImpl e=new EmployeeServiceImpl();
            String s5=e.showEmpDetails(s4);
            System.out.println(s5);
        }
        
        if(z==3){
            int z1=sc.nextInt();
            EmployeeServiceImpl e=new EmployeeServiceImpl();
            boolean b2=e.deleteEmployee(z1);
            System.out.println(b2);
        }
        
    }
}
